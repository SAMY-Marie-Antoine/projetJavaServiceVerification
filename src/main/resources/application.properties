spring.application.name=projetJavaServiceVerification

# Configuration du port du serveur Tomcat
server.port = 8082

# Connexion JPA à la base de données
spring.datasource.url = jdbc:postgresql://localhost:5432/baseverif
spring.datasource.username = postgres
spring.datasource.password = root

#log
logging.level.fr.formation = DEBUG

# Configuration pour auto-générer les tables & champs
spring.jpa.generate-ddl = true
spring.jpa.hibernate.ddl-auto=update

# Afficher les requêtes SQL générées par Hibernate
spring.jpa.show-sql = true

# Activer le CircuitBreaker (Resilience4J) pour OpenFeign
spring.cloud.openfeign.circuitbreaker.enabled = true
spring.cloud.openfeign.circuitbreaker.alphanumeric-ids.enabled = true

# Configuration du Broker Kafka
spring.cloud.stream.kafka.binder.brokers = localhost:9092

# On indique tous les beans qu'on veut utiliser pour notre Broker
spring.cloud.function.definition = onVerificationValidated; onVerificationRejected

# Commentaire validé
spring.cloud.stream.bindings.onVerificationValidated-in-0.destination = verification.validated
spring.cloud.stream.bindings.onVerificationValidated-in-0.group = projetJavaServiceVerification

# Commentaire rejeté
spring.cloud.stream.bindings.onVerificationRejected-in-0.destination = verification.rejected
spring.cloud.stream.bindings.onVerificationRejected-in-0.group = projetJavaServiceVerification

# Configuration Eureka
eureka.instance.prefer-ip-address = true